# 나의 풀이
def solution(priorities, location):
    answer = 0
    cnt = 0
    
    while True:
        p = priorities.pop(0)
        max_p = max(priorities)
        
        if location - cnt == 0:
            if max_p > p:
                priorities.append(p)
                location = len(priorities) - 1
                cnt = 0
            else:
                answer += 1
                return answer
        else:
            if max_p > p:
                priorities.append(p)
                cnt += 1
            else:
                answer += 1
                cnt += 1
    
    return answer

# 다른 풀이 1
def solution(priorities, location):
    answer = 0

    array1 = [c for c in range(len(priorities))] # index 위치 저장 
    array2 = priorities.copy() # 값 저장 (출력되는 값)

    i = 0
    while True:
        if array2[i] < max(array2[i+1:]):
            array1.append(array1.pop(i))
            array2.append(array2.pop(i))
        else:
            i += 1

        if array2 == sorted(array2, reverse=True):
            break

    return array1.index(location) + 1
    
# 다른 풀이 2
def solution(priorities, location):
    answer = 0
    from collections import deque

    d = deque([(v,i) for i,v in enumerate(priorities)])

    while len(d):
        item = d.popleft()
        if d and max(d)[0] > item[0]:
            d.append(item)
        else:
            answer += 1
            if item[1] == location:
                break
    return answer
